<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/batch
	http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/util 
	http://www.springframework.org/schema/util/spring-util-3.2.xsd">

	<batch:job id="customerJob">
            <batch:step id="step1">
                    <batch:tasklet>
                        <batch:chunk reader="xmlItemReader" writer="cvsFileItemWriter"
                                processor="filterCustomerProcessor" commit-interval="1">
                        </batch:chunk>
                    </batch:tasklet>
            </batch:step>
	</batch:job>

	<!-- Filtering process -->
	<bean id="filterCustomerProcessor" class="com.demo.processor.FilterCustomerProcessor" />

	<bean id="xmlItemReader" class="org.springframework.batch.item.xml.StaxEventItemReader">
		<property name="fragmentRootElementName" value="customer" />
		<property name="resource" value="classpath:xml/Customer.xml" />
		<property name="unmarshaller" ref="customerUnmarshaller" />
	</bean>
        
        <!-- Read and map values to object, via jaxb2 -->
	<bean id="customerUnmarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
            <property name="classesToBeBound">
                <list>
                        <value>com.demo.model.Customer</value>
                </list>
            </property>
	</bean>

	<bean id="cvsFileItemWriter" class="org.springframework.batch.item.file.FlatFileItemWriter">
            <!-- write to this csv file -->
            <property name="resource" value="file:csv/customer.csv" />
            <property name="shouldDeleteIfExists" value="true" />

            <property name="lineAggregator">
                <bean
                    class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
                    <property name="delimiter" value="," />
                    <property name="fieldExtractor">
                            <bean
                                class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
                                <property name="names"
                                        value="name, address, gender, dob, currency, balance" />
                            </bean>
                    </property>
                </bean>
            </property>
	</bean>

</beans>
